library(quantstrat)       # Required package for strategy back testing
ttz<-Sys.getenv('TZ')     # Time zone to UTC, saving original time zone
Sys.setenv(TZ='UTC')
strat        <- "BB1"       # Give the stratgey a name variable
portfolio.st <- "BB1"       # Portfolio name
account.st   <- "BB1"       # Account name
csvDir       <- "C:/Users/RJK/Documents/SpiderOak Hive/Financial/commodities_data" # Directory containing csv files
maPeriod     <- 20          # moving average period
bbBreakout   <- 2           # multiple of SD for breakout
bbClose      <- 0           # multiple of SD for close
currency('USD')             # set USD as a base currency
symbol <- "HO" # At this stage is only one symbol
rm.strat(portfolio.st)
delete.paramset(strat,"STOP_OPT")
future(symbol, currency = "USD", multiplier = 1)
getSymbols(Symbols = symbol, verbose = TRUE, warnings = TRUE,
src = 'csv', dir= csvDir, extension='csv', header = TRUE,
stingsAsFactors = FALSE)
HO <- to.daily(HO, indexAt='days',drop.time = TRUE) # this is required to remove duplicate data
initPortf(portfolio.st, symbols = symbol, initDate = "1999-12-31")
initAcct(account.st, portfolios = portfolio.st, initEq = 10000, initDate = "1999-12-31")
initOrders(portfolio = portfolio.st, initDate = "1999-12-31")
strategy(strat, store = TRUE)
addPosLimit(strat, symbol, timestamp="1999-12-31", maxpos=100,
longlevels = 1, minpos=-100, shortlevels = 1)
add.indicator(strat, name = "BBands",
arguments = list(HLC = quote(Cl(mktdata)),
n = maPeriod, maType = 'SMA',sd = bbBreakout),
label = "BBands_breakout")
add.indicator(strat, name = "BBands",
arguments = list(HLC = quote(Cl(mktdata)),
n = maPeriod, maType = 'SMA',sd = bbClose),
label = "BBands_close")
add.signal(strat, name = "sigCrossover",
arguments = list(columns=c(quote(Cl(mktdata)),"up.BBands_breakout"),
relationship = "gt"),
label = "long_entry")
add.signal(strat, name = "sigCrossover",
arguments = list(columns=c(quote(Cl(mktdata)),"up.BBands_close"),
relationship = "lt"),
label = "long_exit")
add.signal(strat, name = "sigCrossover",
arguments = list(columns=c(quote(Cl(mktdata)),"dn.BBands_breakout"),
relationship = "lt"),
label = "short_entry")
add.signal(strat, name = "sigCrossover",
arguments = list(columns=c(quote(Cl(mktdata)),"up.BBands_close"),
relationship = "gt"),
label = "short_exit")
add.rule(strat, name = 'ruleSignal',
arguments = list(sigcol = "long_entry",
sigval = TRUE, orderqty = 100, ordertype = 'market',
orderside ='long', osFUN='osMaxPos', orderset = 'ocolong'),
type ='enter', label = "LE")
add.rule(strat, name = 'ruleSignal',
arguments = list(sigcol = "long_exit",
sigval = TRUE, orderqty = 'all', ordertype = 'market',
orderside ='long', orderset = "ocolong"),
type ='exit', label = "LX")
add.rule(strat, name = 'ruleSignal',
arguments = list(sigcol = "short_entry",
sigval = TRUE, orderqty = -100, ordertype ='market',
orderside = 'short', osFUN='osMaxPos', orderset = 'ocoshort'),
type ='enter', label = 'SE')
add.rule(strat, name = 'ruleSignal',
arguments = list(sigcol = "short_exit",
sigval = TRUE, orderqty = 'all', ordertype ='market',
orderside ='short', orderset = 'ocoshort'),
type ='exit', label = "SX")
out <- applyStrategy(strategy=strat , portfolios=portfolio.st) # Attempt the strategy
updatePortf(Portfolio = portfolio.st)                          # Update the portfolio
updateAcct(name = account.st)
updateEndEq(account.st)
chart.Posn(Portfolio = portfolio.st, Symbol = symbol, TA="add_BBands(n=20,sd=2)", Dates = "2004")          # Chart the position
stats <- tradeStats(portfolio.st)
eq1 <- getAccount(account.st)$summary$End.Eq
rt1 <- Return.calculate(eq1,"log")
getSymbols("^GSPC", from = '1995-01-01')
chartSeries(GSPC, type="candlesticks", theme = chartTheme("white"))
rt2 <- periodReturn(GSPC, period = "daily")
returns <- cbind(rt1,rt2)
colnames(returns) <- c("BB","SP500")
chart.CumReturns(returns,colorset=c(2,4),legend.loc="topleft",
main="BBand to Benchmark Comparison",ylab="cum return",xlab="",
minor.ticks=FALSE)
Sys.setenv(TZ=ttz)                                             # Return to original time zone
